CREATE OR REPLACE TYPE CUSTOMER_ID_ARRAY AS TABLE OF NUMBER;
/

--STORE PROCEDURE TO GENERATE FUND
CREATE OR REPLACE PROCEDURE GENERATE_FUND_COMP (
    P_CUSTOMER_IDS IN CUSTOMER_ID_ARRAY,
    P_FUND_ID IN NUMBER
) AS
    TYPE RISK_PROFILE_REC IS RECORD (
        RISK_PROFILE_ID NUMBER,
        CUSTOMER_COUNT  NUMBER
    );
    TYPE RISK_PROFILE_TAB IS TABLE OF RISK_PROFILE_REC;
    
    RISK_PROFILES RISK_PROFILE_TAB;
    V_TOTAL_CUSTOMERS NUMBER := 0;
    
    CURSOR C_ASSET_CLASSES IS
        SELECT ASSET_CLASS_ID, RISK_PROFILE_ID
        FROM FF_ASSET_CLASSES;
BEGIN
    -- STORING COUNT OF CUSTOMERS PER RISK PROFILE ID
    SELECT ASSIGNED_RISK_PROFILE_ID, COUNT(*)
    BULK COLLECT INTO RISK_PROFILES
    FROM VW_CUSTOMER_WEIGHTED_RISK_ASSIGNED
    WHERE CUSTOMER_ID MEMBER OF P_CUSTOMER_IDS
    GROUP BY ASSIGNED_RISK_PROFILE_ID;
    
    FOR I IN 1 .. RISK_PROFILES.COUNT LOOP
        V_TOTAL_CUSTOMERS := V_TOTAL_CUSTOMERS + RISK_PROFILES(I).CUSTOMER_COUNT;
    END LOOP;
    
    FOR AC IN C_ASSET_CLASSES LOOP
        DECLARE
            V_PERCENT NUMBER := 0;
            V_ASSET_CLASS_COUNT NUMBER := 0;
            V_SPLIT_PERCENT NUMBER := 0;
            V_RISK_COUNT NUMBER := 0;
        BEGIN
            -- Find customer count for this risk profile
            FOR J IN 1 .. RISK_PROFILES.COUNT LOOP
                IF RISK_PROFILES(J).RISK_PROFILE_ID = AC.RISK_PROFILE_ID THEN
                    V_RISK_COUNT := RISK_PROFILES(J).CUSTOMER_COUNT;
                    EXIT;
                END IF;
            END LOOP;

            IF V_TOTAL_CUSTOMERS > 0 THEN
                V_PERCENT := V_RISK_COUNT * 100 / V_TOTAL_CUSTOMERS;

                -- Count asset classes for this risk profile
                SELECT COUNT(*) INTO V_ASSET_CLASS_COUNT
                FROM FF_ASSET_CLASSES
                WHERE RISK_PROFILE_ID = AC.RISK_PROFILE_ID;

                IF V_ASSET_CLASS_COUNT > 0 THEN
                    V_SPLIT_PERCENT := V_PERCENT / V_ASSET_CLASS_COUNT;
                ELSE
                    V_SPLIT_PERCENT := 0;
                END IF;
            END IF;
            -- Update each asset class with its share
            UPDATE FF_FUND_ASSETS
            SET PERCENT_OF_FUND = V_SPLIT_PERCENT
            WHERE FUND_ID = P_FUND_ID AND ASSET_CLASS_ID = AC.ASSET_CLASS_ID;
        END;
    END LOOP;
    
END;
/

--SET SERVEROUTPUT ON;
--DECLARE 
--    V_CUSTOMER_IDS CUSTOMER_ID_ARRAY;
--BEGIN
--    SELECT CUSTOMER_ID BULK COLLECT INTO V_CUSTOMER_IDS FROM FF_CUSTOMERS WHERE AGE>60;
--     GENERATE_FUND_COMP(V_CUSTOMER_IDS, 1);
--END;
--/

--SELECT * FROM FF_FUND_ASSETS;